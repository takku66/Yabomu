<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="yabomu.trip.infrastructure.mapper.TodoListMapper" >

	<sql id="Base_Column_List">
		tl.event_id,
		tl.todo_id,
		tl.create_date_time,
		tl.create_user,
		tl.update_date_time,
		tl.update_user,
		tl.title,
		tl.content,
		tl.todo_start_date_time,
		tl.todo_end_date_time,
		tl.reminder_repeat,
		tl.reminder_notice_time
	</sql>
	<sql id="User_Column_List">
		u1.user_name as create_user_name,
		u2.user_name as update_user_name
	</sql>


	<sql id="Base_Where_Clause">
		<where>

		</where>
	</sql>

<!-- ドメインモデルをそのままマッピングしたかったが、enumやvalueobjectの変換やらで苦戦。。。 -->
<!-- 冗長になるが、DBと対になるデータクラスを用意して、コンバートしてあげるようにする -->
	<resultMap id="TodoListResultMap" type="yabomu.trip.infrastructure.entity.TodoEntity" >
		<id column="event_id" property="eventId" jdbcType="BIGINT" />
		<id column="todo_id" property="todoId" jdbcType="BIGINT" />
		<result column="create_date_time" property="createDateTime" jdbcType="TIMESTAMP" />
		<result column="create_user" property="createUserId" jdbcType="INTEGER" />
		<result column="update_date_time" property="updateDateTime" jdbcType="TIMESTAMP" />
		<result column="update_user" property="updateUserId" jdbcType="INTEGER" />
		<result column="title" property="title" jdbcType="VARCHAR" />
		<result column="content" property="content" jdbcType="VARCHAR" />
		<result column="todo_start_date_time" property="todoStartDateTime" jdbcType="TIMESTAMP" />
		<result column="todo_end_date_time" property="todoEndDateTime" jdbcType="TIMESTAMP" />
		<result column="reminder_repeat" property="reminderRepeat" jdbcType="CHAR" />
		<result column="reminder_notice_time" property="reminderNoticeTime" jdbcType="INTEGER" />
		<result column="create_user_name" property="createUserName" jdbcType="VARCHAR" />
		<result column="update_user_name" property="updateUserName" jdbcType="VARCHAR" />
	</resultMap>

<!-- データ量が少ないうちはいいが、多くなってパフォーマンスが危なくなってきたらどうするか？ -->
<!-- ユーザー情報だけでも別SQLで取得した方がよいか。。。？ -->
<!-- TODO:ダミーテストデータを使って実行計画みてみる -->
	<select id="findAll" resultMap="TodoListResultMap">
		select
			<include refid="Base_Column_List" />,
			<include refid="User_Column_List" />
		from todo_list as tl
		left outer join users as u1
		on tl.create_user = u1.user_id
		left outer join users as u2
		on tl.update_user = u2.user_id
		order by event_id, todo_id
	</select>

	<select id="findByEventId" resultMap="TodoListResultMap" parameterType="java.lang.Long">
		select
			<include refid="Base_Column_List" />
		from todo_list as tl
		where event_id = #{eventId}
		<!-- <if test="orderByClause != null and orderByClause != ''" >
			order by ${orderByClause}
		</if> -->
	</select>

	<select id="findByTodoId" resultMap="TodoListResultMap" parameterType="java.lang.Long">
		select
			<include refid="Base_Column_List" />
		from todo_list as tl
		where todo_id = #{todoId}
		<!-- <if test="orderByClause != null and orderByClause != ''" >
			order by ${orderByClause}
		</if> -->
	</select>

	<select id="matching" resultMap="TodoListResultMap" parameterType="yabomu.trip.infrastructure.condition.TodoCondition" >
		select
			<include refid="Base_Column_List" />
		from todo_list
		where
			todo_id = #{todoId}
		<if test="orderByClause != null" >
			order by ${orderByClause}
		</if>
	</select>


	<insert id="insert">
	  insert into todo_list (
		event_id,
		todo_id,
		create_date_time,
		create_user,
		update_date_time,
		update_user,
		title,
		content,
		todo_start_date_time,
		todo_end_date_time,
		reminder_repeat,
		reminder_notice_time
	  )
	  values (
	  	#{eventId},
		#{todoId},
		current_timestamp,
		#{createUser},
		current_timestamp,
		#{updateUser},
		#{title},
		#{content},
		#{todoStartDateTime},
		#{todoEndDateTime},
		#{reminderRepeat},
		#{reminderNoticeTime}
	  )
	</insert>

	<update id="update">
		update todo_list set
			event_id = #{eventId},
			todo_id = #{todoId},
<!-- 			create_date_time = current_timestamp, -->
<!-- 			create_user = #{createUser}, -->
			update_date_time = current_timestamp,
			update_user = #{updateUserId},
			title = #{title},
			content = #{content},
			todo_start_date_time = #{todoStartDateTime},
			todo_end_date_time = #{todoEndDateTime},
			reminder_repeat = #{reminderRepeat},
			reminder_notice_time = #{reminderNoticeTime}
		where
			event_id = #{eventId} AND
			todo_id = #{todoId}
	</update>
<!-- 	<insert id="insert" -->
<!-- 		parameterType="yabomu.trip.domain.model.todolist.Todo" -->
<!-- 		flushCache="true" -->
<!-- 		statementType="PREPARED" -->
<!-- 		keyProperty="" -->
<!-- 		keyColumn="" -->
<!-- 		useGeneratedKeys="false" -->
<!-- 		timeout="180"> -->
<!-- 	</insert> -->
<!-- 	<update id="update" -->
<!-- 		parameterType="yabomu.trip.domain.model.todolist.Todo" -->
<!-- 		flushCache="true" -->
<!-- 		statementType="PREPARED" -->
<!-- 		timeout="180"> -->
<!-- 	</update> -->
	<delete id="delete"
		parameterType="yabomu.trip.domain.model.todolist.Todo"
		flushCache="true"
		statementType="PREPARED"
		timeout="180">
	</delete>
</mapper>